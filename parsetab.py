
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DC292F9F4BA35C170EC9A3E5CBB49668'
    
_lr_action_items = {'DIVIDE':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,55,55,55,55,-28,-27,-26,55,55,55,-42,55,55,-32,55,55,-33,-31,55,55,55,55,55,55,55,-59,55,55,]),'LNOT':([2,4,20,21,26,28,32,35,42,45,52,53,54,55,57,58,59,60,61,62,63,64,65,66,70,104,106,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'CONST':([0,1,3,7,8,9,10,13,14,16,22,23,24,25,56,67,69,78,79,95,98,103,107,110,112,117,119,124,127,128,129,130,131,132,134,135,136,],[6,6,-11,-7,-14,-6,-13,-4,-12,-5,-8,-9,-10,-3,-25,6,-18,6,-60,6,-24,-16,6,-46,-15,-43,-44,-17,6,6,6,6,6,6,-61,-62,-45,]),'FUNC':([0,1,3,5,7,8,9,10,13,14,16,22,23,24,25,56,67,69,78,79,95,98,103,107,110,112,117,119,124,127,128,129,130,131,132,134,135,136,],[17,17,-11,39,-7,-14,-6,-13,-4,-12,-5,-8,-9,-10,-3,-25,17,-18,17,-60,17,-24,-16,17,-46,-15,-43,-44,-17,17,17,17,17,17,17,-61,-62,-45,]),'LOR':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,61,61,61,61,-28,-27,-26,61,61,61,-42,-34,-38,-32,-36,-37,-33,-31,-41,-35,-39,-29,-40,-30,61,-59,61,61,]),'PRINT':([0,1,3,7,8,9,10,13,14,16,22,23,24,25,56,67,69,78,79,95,98,103,107,110,112,117,119,124,127,128,129,130,131,132,134,135,136,],[2,2,-11,-7,-14,-6,-13,-4,-12,-5,-8,-9,-10,-3,-25,2,-18,2,-60,2,-24,-16,2,-46,-15,-43,-44,-17,2,2,2,2,2,2,-61,-62,-45,]),'WHILE':([0,1,3,7,8,9,10,13,14,16,22,23,24,25,56,67,69,78,79,95,98,103,107,110,112,117,119,124,127,128,129,130,131,132,134,135,136,],[4,4,-11,-7,-14,-6,-13,-4,-12,-5,-8,-9,-10,-3,-25,4,-18,4,-60,4,-24,-16,4,-46,-15,-43,-44,-17,4,4,4,4,4,4,-61,-62,-45,]),'FLOAT_VALUE':([2,4,20,21,26,28,32,35,42,45,52,53,54,55,57,58,59,60,61,62,63,64,65,66,70,104,106,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'EXTERN':([0,1,3,7,8,9,10,13,14,16,22,23,24,25,56,67,69,78,79,95,98,103,107,110,112,117,119,124,127,128,129,130,131,132,134,135,136,],[5,5,-11,-7,-14,-6,-13,-4,-12,-5,-8,-9,-10,-3,-25,5,-18,5,-60,5,-24,-16,5,-46,-15,-43,-44,-17,5,5,5,5,5,5,-61,-62,-45,]),'RETURN':([0,1,3,7,8,9,10,13,14,16,22,23,24,25,56,67,69,78,79,95,98,103,107,110,112,117,119,124,127,128,129,130,131,132,134,135,136,],[21,21,-11,-7,-14,-6,-13,-4,-12,-5,-8,-9,-10,-3,-25,21,-18,21,-60,21,-24,-16,21,-46,-15,-43,-44,-17,21,21,21,21,21,21,-61,-62,-45,]),'MINUS':([2,4,20,21,26,27,28,29,30,31,32,33,34,35,36,37,38,42,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,70,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,104,106,109,116,118,],[28,28,28,28,28,-53,28,-55,-54,-48,28,-47,-52,28,-56,66,66,28,28,66,66,-28,-27,-26,66,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,66,66,-42,66,66,-32,66,66,-33,-31,66,66,66,-29,66,-30,66,28,28,-59,66,66,]),'BOOLEAN_VALUE':([2,4,20,21,26,28,32,35,42,45,52,53,54,55,57,58,59,60,61,62,63,64,65,66,70,104,106,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LE':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,53,53,53,53,-28,-27,-26,53,53,53,-42,None,None,-32,None,None,-33,-31,53,None,None,-29,53,-30,53,-59,53,53,]),'RPAREN':([27,29,30,31,33,34,36,45,48,49,50,51,52,72,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,99,100,102,109,111,115,118,123,],[-53,-55,-54,-48,-47,-52,-56,-58,-28,-27,-26,80,-58,-58,-57,-51,105,-50,-42,109,-34,-38,-32,-36,-37,-33,-31,-41,-35,-39,-29,-40,-30,-58,113,-21,-22,-59,120,-23,-49,-20,]),'STRING_VALUE':([2,4,20,21,26,28,32,35,42,45,52,53,54,55,57,58,59,60,61,62,63,64,65,66,70,104,106,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'SEMI':([27,29,30,31,33,34,36,37,40,47,48,49,50,71,73,74,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,105,109,116,126,],[-53,-55,-54,-48,-47,-52,-56,56,69,79,-28,-27,-26,98,103,-57,-42,-34,-38,-32,-36,-37,-33,-31,-41,-35,-39,-29,-40,-30,112,117,-59,124,-19,]),'NE':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,58,58,58,58,-28,-27,-26,58,58,58,-42,None,None,-32,None,None,-33,-31,58,None,None,-29,58,-30,58,-59,58,58,]),'LT':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,62,62,62,62,-28,-27,-26,62,62,62,-42,None,None,-32,None,None,-33,-31,62,None,None,-29,62,-30,62,-59,62,62,]),'PLUS':([2,4,20,21,26,27,28,29,30,31,32,33,34,35,36,37,38,42,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,70,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,104,106,109,116,118,],[32,32,32,32,32,-53,32,-55,-54,-48,32,-47,-52,32,-56,64,64,32,32,64,64,-28,-27,-26,64,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,64,64,-42,64,64,-32,64,64,-33,-31,64,64,64,-29,64,-30,64,32,32,-59,64,64,]),'COMMA':([27,29,30,31,33,34,36,45,48,49,50,52,72,74,75,76,77,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,99,100,102,109,111,115,118,123,],[-53,-55,-54,-48,-47,-52,-56,-58,-28,-27,-26,-58,-58,-57,-51,106,-50,-42,106,-34,-38,-32,-36,-37,-33,-31,-41,-35,-39,-29,-40,-30,-58,114,-21,-22,-59,114,-23,-49,-20,]),'ASSIGN':([12,19,41,73,74,],[42,-56,70,104,-57,]),'$end':([0,1,3,7,8,9,10,11,13,14,15,16,22,23,24,25,56,69,79,98,103,110,112,117,119,124,134,135,136,],[-58,-1,-11,-7,-14,-6,-13,0,-4,-12,-2,-5,-8,-9,-10,-3,-25,-18,-60,-24,-16,-46,-15,-43,-44,-17,-61,-62,-45,]),'INTEGER_VALUE':([2,4,20,21,26,28,32,35,42,45,52,53,54,55,57,58,59,60,61,62,63,64,65,66,70,104,106,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'GT':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,63,63,63,63,-28,-27,-26,63,63,63,-42,None,None,-32,None,None,-33,-31,63,None,None,-29,63,-30,63,-59,63,63,]),'RBRACE':([3,7,8,9,10,13,14,16,22,23,24,25,56,69,79,95,98,103,107,108,110,112,117,119,124,130,131,132,133,134,135,136,],[-11,-7,-14,-6,-13,-4,-12,-5,-8,-9,-10,-3,-25,-18,-60,110,-24,-16,-63,119,-46,-15,-43,-44,-17,134,135,-64,136,-61,-62,-45,]),'MODULE':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,59,59,59,59,-28,-27,-26,59,59,59,-42,59,59,-32,59,59,-33,-31,59,59,59,59,59,59,59,-59,59,59,]),'TIMES':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,60,60,60,60,-28,-27,-26,60,60,60,-42,60,60,-32,60,60,-33,-31,60,60,60,60,60,60,60,-59,60,60,]),'GE':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,54,54,54,54,-28,-27,-26,54,54,54,-42,None,None,-32,None,None,-33,-31,54,None,None,-29,54,-30,54,-59,54,54,]),'LAND':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,65,65,65,65,-28,-27,-26,65,65,65,-42,-34,-38,-32,-36,-37,-33,-31,65,-35,-39,-29,-40,-30,65,-59,65,65,]),'LPAREN':([2,4,19,20,21,26,28,32,35,36,42,43,45,52,53,54,55,57,58,59,60,61,62,63,64,65,66,68,70,104,106,],[35,35,45,35,35,35,35,35,35,52,35,72,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,96,35,35,35,]),'VAR':([0,1,3,7,8,9,10,13,14,16,22,23,24,25,56,67,69,78,79,95,98,103,107,110,112,117,119,124,127,128,129,130,131,132,134,135,136,],[18,18,-11,-7,-14,-6,-13,-4,-12,-5,-8,-9,-10,-3,-25,18,-18,18,-60,18,-24,-16,18,-46,-15,-43,-44,-17,18,18,18,18,18,18,-61,-62,-45,]),'ELSE':([119,],[125,]),'EQ':([27,29,30,31,33,34,36,37,38,46,47,48,49,50,51,71,77,80,82,83,84,85,86,87,88,89,90,91,92,93,94,97,109,116,118,],[-53,-55,-54,-48,-47,-52,-56,57,57,57,57,-28,-27,-26,57,57,57,-42,None,None,-32,None,None,-33,-31,57,None,None,-29,57,-30,57,-59,57,57,]),'ID':([0,1,2,3,4,6,7,8,9,10,13,14,16,17,18,20,21,22,23,24,25,26,28,32,35,39,42,44,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,69,70,72,78,79,95,96,98,101,103,104,106,107,110,112,113,114,117,119,120,124,127,128,129,130,131,132,134,135,136,],[19,19,36,-11,36,41,-7,-14,-6,-13,-4,-12,-5,43,44,36,36,-8,-9,-10,-3,36,36,36,36,68,36,74,36,36,36,36,36,-25,36,36,36,36,36,36,36,36,36,36,19,-18,36,101,19,-60,19,101,-24,74,-16,36,36,19,-46,-15,74,101,-43,-44,74,-17,19,19,19,19,19,19,-61,-62,-45,]),'IF':([0,1,3,7,8,9,10,13,14,16,22,23,24,25,56,67,69,78,79,95,98,103,107,110,112,117,119,124,127,128,129,130,131,132,134,135,136,],[20,20,-11,-7,-14,-6,-13,-4,-12,-5,-8,-9,-10,-3,-25,20,-18,20,-60,20,-24,-16,20,-46,-15,-43,-44,-17,20,20,20,20,20,20,-61,-62,-45,]),'LBRACE':([27,29,30,31,33,34,36,38,46,48,49,50,74,80,82,83,84,85,86,87,88,89,90,91,92,93,94,109,113,121,122,125,],[-53,-55,-54,-48,-47,-52,-56,67,78,-28,-27,-26,-57,-42,-34,-38,-32,-36,-37,-33,-31,-41,-35,-39,-29,-40,-30,-59,-58,127,128,129,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,67,78,127,128,129,],[1,95,107,130,131,132,]),'print_statement':([0,1,67,78,95,107,127,128,129,130,131,132,],[3,3,3,3,3,3,3,3,3,3,3,3,]),'parameters':([72,96,],[99,111,]),'typename':([44,101,113,120,],[73,115,121,126,]),'while_statement':([0,1,67,78,95,107,127,128,129,130,131,132,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'return_statement':([0,1,67,78,95,107,127,128,129,130,131,132,],[8,8,8,8,8,8,8,8,8,8,8,8,]),'var_declaration':([0,1,67,78,95,107,127,128,129,130,131,132,],[9,9,9,9,9,9,9,9,9,9,9,9,]),'literal':([2,4,20,21,26,28,32,35,42,45,52,53,54,55,57,58,59,60,61,62,63,64,65,66,70,104,106,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'program':([0,],[11,]),'location':([0,1,2,4,20,21,26,28,32,35,42,45,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,70,78,95,104,106,107,127,128,129,130,131,132,],[12,12,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,12,33,12,12,33,33,12,12,12,12,12,12,12,]),'statement':([0,1,67,78,95,107,127,128,129,130,131,132,],[13,25,13,13,25,25,13,13,13,25,25,25,]),'func_prototype':([5,],[40,]),'if_statement':([0,1,67,78,95,107,127,128,129,130,131,132,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'empty':([0,45,52,72,96,113,],[15,75,75,102,102,122,]),'const_declaration':([0,1,67,78,95,107,127,128,129,130,131,132,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'exprlist':([45,52,],[76,81,]),'parm_declaration':([72,96,114,],[100,100,123,]),'function_declaration':([0,1,67,78,95,107,127,128,129,130,131,132,],[22,22,22,22,22,22,22,22,22,22,22,22,]),'then_if':([78,],[108,]),'function_call_statement':([0,1,67,78,95,107,127,128,129,130,131,132,],[23,23,23,23,23,23,23,23,23,23,23,23,]),'extern_declaration':([0,1,67,78,95,107,127,128,129,130,131,132,],[7,7,7,7,7,7,7,7,7,7,7,7,]),'then_else':([129,],[133,]),'expression':([2,4,20,21,26,28,32,35,42,45,52,53,54,55,57,58,59,60,61,62,63,64,65,66,70,104,106,],[37,38,46,47,48,49,50,51,71,77,77,82,83,84,85,86,87,88,89,90,91,92,93,94,97,116,118,]),'assign_statement':([0,1,67,78,95,107,127,128,129,130,131,132,],[24,24,24,24,24,24,24,24,24,24,24,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','goparser.py',47),
  ('program -> empty','program',1,'p_program','goparser.py',48),
  ('statements -> statements statement','statements',2,'p_statements','goparser.py',54),
  ('statements -> statement','statements',1,'p_statements_1','goparser.py',61),
  ('statement -> const_declaration','statement',1,'p_statement','goparser.py',67),
  ('statement -> var_declaration','statement',1,'p_statement','goparser.py',68),
  ('statement -> extern_declaration','statement',1,'p_statement','goparser.py',69),
  ('statement -> function_declaration','statement',1,'p_statement','goparser.py',70),
  ('statement -> function_call_statement','statement',1,'p_statement','goparser.py',71),
  ('statement -> assign_statement','statement',1,'p_statement','goparser.py',72),
  ('statement -> print_statement','statement',1,'p_statement','goparser.py',73),
  ('statement -> if_statement','statement',1,'p_statement','goparser.py',74),
  ('statement -> while_statement','statement',1,'p_statement','goparser.py',75),
  ('statement -> return_statement','statement',1,'p_statement','goparser.py',76),
  ('const_declaration -> CONST ID ASSIGN expression SEMI','const_declaration',5,'p_const_declaration','goparser.py',82),
  ('var_declaration -> VAR ID typename SEMI','var_declaration',4,'p_var_declaration','goparser.py',88),
  ('var_declaration -> VAR ID typename ASSIGN expression SEMI','var_declaration',6,'p_var_declaration_1','goparser.py',94),
  ('extern_declaration -> EXTERN func_prototype SEMI','extern_declaration',3,'p_extern_declaration','goparser.py',100),
  ('func_prototype -> FUNC ID LPAREN parameters RPAREN typename','func_prototype',6,'p_func_prototype','goparser.py',106),
  ('parameters -> parameters COMMA parm_declaration','parameters',3,'p_parameters','goparser.py',112),
  ('parameters -> parm_declaration','parameters',1,'p_parameters_1','goparser.py',119),
  ('parameters -> empty','parameters',1,'p_parameters_1','goparser.py',120),
  ('parm_declaration -> ID typename','parm_declaration',2,'p_parm_declaration','goparser.py',126),
  ('assign_statement -> location ASSIGN expression SEMI','assign_statement',4,'p_assign_statement','goparser.py',132),
  ('print_statement -> PRINT expression SEMI','print_statement',3,'p_print_statement','goparser.py',138),
  ('expression -> PLUS expression','expression',2,'p_expression_unary','goparser.py',144),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','goparser.py',145),
  ('expression -> LNOT expression','expression',2,'p_expression_unary','goparser.py',146),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary','goparser.py',152),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary','goparser.py',153),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binary','goparser.py',154),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary','goparser.py',155),
  ('expression -> expression MODULE expression','expression',3,'p_expression_binary','goparser.py',156),
  ('expression -> expression LE expression','expression',3,'p_expression_relation','goparser.py',162),
  ('expression -> expression LT expression','expression',3,'p_expression_relation','goparser.py',163),
  ('expression -> expression EQ expression','expression',3,'p_expression_relation','goparser.py',164),
  ('expression -> expression NE expression','expression',3,'p_expression_relation','goparser.py',165),
  ('expression -> expression GE expression','expression',3,'p_expression_relation','goparser.py',166),
  ('expression -> expression GT expression','expression',3,'p_expression_relation','goparser.py',167),
  ('expression -> expression LAND expression','expression',3,'p_expression_relation','goparser.py',168),
  ('expression -> expression LOR expression','expression',3,'p_expression_relation','goparser.py',169),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','goparser.py',175),
  ('function_call_statement -> ID LPAREN exprlist RPAREN SEMI','function_call_statement',5,'p_function_call_statement','goparser.py',184),
  ('if_statement -> IF expression LBRACE then_if RBRACE','if_statement',5,'p_if_statement','goparser.py',190),
  ('if_statement -> IF expression LBRACE then_if RBRACE ELSE LBRACE then_else RBRACE','if_statement',9,'p_if_else_statement','goparser.py',196),
  ('while_statement -> WHILE expression LBRACE statements RBRACE','while_statement',5,'p_while_statement','goparser.py',202),
  ('expression -> location','expression',1,'p_expression_location','goparser.py',208),
  ('expression -> literal','expression',1,'p_expression_literal','goparser.py',215),
  ('exprlist -> exprlist COMMA expression','exprlist',3,'p_exprlist','goparser.py',221),
  ('exprlist -> expression','exprlist',1,'p_exprlist_1','goparser.py',228),
  ('exprlist -> empty','exprlist',1,'p_exprlist_1','goparser.py',229),
  ('literal -> INTEGER_VALUE','literal',1,'p_literal','goparser.py',235),
  ('literal -> FLOAT_VALUE','literal',1,'p_literal','goparser.py',236),
  ('literal -> STRING_VALUE','literal',1,'p_literal','goparser.py',237),
  ('literal -> BOOLEAN_VALUE','literal',1,'p_literal','goparser.py',238),
  ('location -> ID','location',1,'p_location','goparser.py',245),
  ('typename -> ID','typename',1,'p_typename','goparser.py',252),
  ('empty -> <empty>','empty',0,'p_empty','goparser.py',259),
  ('expression -> ID LPAREN exprlist RPAREN','expression',4,'p_expression_funcall','goparser.py',268),
  ('return_statement -> RETURN expression SEMI','return_statement',3,'p_return_statement','goparser.py',274),
  ('function_declaration -> FUNC ID LPAREN parameters RPAREN typename LBRACE statements RBRACE','function_declaration',9,'p_function_declaration','goparser.py',281),
  ('function_declaration -> FUNC ID LPAREN parameters RPAREN empty LBRACE statements RBRACE','function_declaration',9,'p_function_declaration_without_type','goparser.py',287),
  ('then_if -> statements','then_if',1,'p_then_if','goparser.py',293),
  ('then_else -> statements','then_else',1,'p_then_else','goparser.py',299),
]
